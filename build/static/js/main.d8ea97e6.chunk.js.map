{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","gotToStore","event","preventDefault","console","log","_this","current","value","storeName","props","history","push","this","react_default","a","createElement","className","onSubmit","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","deleteOrderItem","_this2","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updatedFish","objectSpread","defineProperty","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","_this$props$details","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.d8ea97e6.chunk.js","sourcesContent":["\n// pure js functions\n\nexport function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\n// random function\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\n\n// takes in text and swaps out for a slug??? Formats text\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\n\n// randomly chooses name for store\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport { getFunName } from '../helpers';\nimport PropTypes from 'prop-types';\n\nclass StorePicker extends React.Component {\n\n  static propTypes = {\n    history: PropTypes.object,\n  }\n\n  myInput = React.createRef();\n\n  //this is undefined until you bind method\n  // arrow function sets own this context\n  // gotToStore is a property, set to arrow func which binds this to    StorePicker component\n  gotToStore = (event) => {\n    // 1.prevents page submit / refresh\n    event.preventDefault()\n    // 2.get text from input\n    console.log(this.myInput.current.value);\n    const storeName = this.myInput.current.value;\n    // 3. change page to new path by using prop's history (check out STorePicker in react Dev tools to see props and their methods available)\n    this.props.history.push(`/store/${storeName}`)\n  }\n\n  componentDidMount() {\n    console.log(\"mounted!\");\n    console.log(\"this\", this);  // this is class instancce, StorePicker\n  }\n\n  render() {\n    return (\n      // listening for form submit, NOT button click!!\n      // no () so method isn't called when component mounts.\n      <form className=\"store-selector\" onSubmit={this.gotToStore}>\n        <h2>Please Enter a Store</h2>\n        {/* runs getFunName when component mounts */}\n        <input\n          type=\"text\"\n          ref={this.myInput}\n          required\n          placeholder=\"Store Name\"\n          defaultValue={getFunName()}\n        />\n        <button type=\"submit\">Visit Store -> </button>\n      </form>\n    )\n  }\n}\n\nexport default StorePicker;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n//  stateless functionaal component as it only has a render menthod and proptypes.\n// implicit return without {} and return.\n// props can be destructured as ({ tagline, etc})  instead of (props\n\nconst Header = (props) => (\n    <header className= \"top\">\n      <h1>\n        Catch\n        <span className= \"ofThe\">\n          <span className=\"of\">Of</span>\n          <span className=\"the\">The</span>\n        </span>\n        Day\n      </h1>\n      <h3 className=\"tagline\">\n        <span>{props.tagline}</span>\n        {/* \"this\" is component instance (Header parent in App) */}\n      </h3>\n    </header>\n  )\n\n  {/* if a class component, props need this keyword.\n  <span>{this.props.tagline}</span>\n  \"this\" is component instance (Header parent in App) */}\n\nHeader.propTypes = {\n  tagline: PropTypes.string.isRequired\n}\nexport default Header;\n","import React from 'react';\nimport { formatPrice } from '../helpers'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\nimport PropTypes from 'prop-types';\n\nclass Order extends React.Component {\n\n  static propTypes = {\n    fishes: PropTypes.object,\n    order: PropTypes.object,\n    deleteOrderItem: PropTypes.func\n  }\n  // make separate render functions to keep it tidy\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];           // grab the fish you're looping over\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available'\n    const transitionOptions = {\n      classNames: \"order\",\n      key: key,\n      timeout: { enter: 250, exit: 250 }\n    }\n\n    // delay in DB mirroring state: render nothing until fish actually exists.\n    if(!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li\n            key={key}>\n            Sorry, {fish ? fish.name : 'fish'} is no longer available\n          </li>\n        </CSSTransition>\n      )\n    } else {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            <span>\n              <TransitionGroup component=\"span\" className=\"count\">\n                {/* CSSTransition has classnameS plural */}\n                <CSSTransition\n                  classNames=\"count\"\n                  key={count}\n                  timeout={{ enter: 250, exit: 250 }}\n                >\n                  <span>{count}</span>\n                </CSSTransition>\n              </TransitionGroup>\n              lbs {fish.name}\n              {formatPrice(count * fish.price)}\n              <button onClick={() => this.props.deleteOrderItem(key)}>\n                &times;\n              </button>\n            </span>\n          </li>\n        </CSSTransition>\n      )\n      // loads of spans for CSS animations\n    }\n  }\n\n  render() {\n    // tallu up total of order\n    const orderIds = Object.keys(this.props.order);   // keys from order state\n\n    const total = orderIds.reduce((prevTotal, key) => { // reduce loops and tallies\n      const fish = this.props.fishes[key];           // grab the fish you're looping over\n      const count = this.props.order[key];          // how many fish are being bought\n      const isAvailable = fish && fish.status === 'available'\n       // boolean, is there a fish and is fish available? ie, not \"sold out\"\n      if(isAvailable) {\n        // console.log('count', count);\n        return prevTotal + (count * fish.price)\n      }\n      //else\n      return prevTotal;\n    }, 0);                       // 0 is starting value (second arg) for reduce()\n\n    return (\n    <div className=\"order-wrap\">\n      <h2>Order</h2>\n      {/* loop over each of the orderIDs to display each fish & how many */}\n      <TransitionGroup\n        component=\"ul\"\n        className=\"order\">\n        {orderIds.map(this.renderOrder)}\n      </TransitionGroup>\n      <div className=\"total\">Total:\n        <strong>{formatPrice(total)}</strong>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default Order;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n  // refs mean \"state\" is basically stuck in this component and can't be passed up. State should be up in APP.\n\n  static propTypes = {\n    addFish: PropTypes.func\n  }\n\n  createFish = (event) =>{\n    event.preventDefault();\n    const fish = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value,\n    }\n    // calls addFish method via Inventory then App\n    this.props.addFish(fish)\n    // refresh form to reset without touching state\n    event.currentTarget.reset();\n  }\n  render() {\n    return (\n  <form className=\"fish-edit\" onSubmit={this.createFish}>\n    <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n    <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n    <select name=\"status\" ref={this.statusRef}>\n      <option value=\"available\">Fresh!</option>\n      <option value=\"unavailable\">Sold Out!</option>\n    </select>\n\n    <textarea name=\"desc\" ref={this.descRef}type=\"text\" placeholder=\"Desc\" />\n    <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n    <button type=\"submit\">+ Add Fish</button>\n  </form>\n    )\n  }\n}\n\nexport default AddFishForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n\n  static propTypes = {\n    fish: PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      price: PropTypes.number,\n      desc: PropTypes.string,\n      status: PropTypes.string\n    }),\n    index: PropTypes.string,\n    updateFish: PropTypes.func\n  }\n\n\n  // alternative to refs way\n  handleChange = (event) => {\n    console.log(\"event\", event.currentTarget.value);\n    // 1. take copy of current fish\n    const updatedFish = {\n      ...this.props.fish,      // grabs ALL fish props: name, price, desc, etc\n      //COMPUTED PROPERTY NAMES: value being updated is also dynamic.\n      // it figures out what got updated instead of being explicitly told.\n      //just overwrite the one thing that changed, using name prop on elements.\n      [event.currentTarget.name]: event.currentTarget.value   //\n    }\n    // call updated fish method passed from App\n    this.props.updateFish(this.props.index, updatedFish) //index acts as a key\n  }\n\n  render() {\n    return (\n    <div className=\"fish-edit\">\n      <input\n        type=\"text\"\n        name=\"name\"\n        // needs onChange event so user can type into input field (React rule)\n        onChange={this.handleChange}\n        value={this.props.fish.name}\n      />\n      <input\n        type=\"text\"\n        name=\"price\"\n        onChange={this.handleChange}\n        value={this.props.fish.price}\n      />\n      <select\n        type=\"type\"\n        onChange={this.handleChange}\n        name=\"status\"\n        value={this.props.fish.status}\n      >\n        <option type=\"available\">Fresh!</option>\n        <option type=\"unavailable\">Sold Out!</option>\n      </select>\n      <textarea\n        name=\"desc\"\n        value={this.props.fish.desc}\n        onChange={this.handleChange}\n        >\n      </textarea>\n      <input type=\"text\"\n        name=\"image\"\n        onChange={this.handleChange}\n        value={this.props.fish.image}\n      />\n      <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\n    </div>\n    )\n  }\n}\n\nexport default EditFishForm;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = props => (\n  <nav className=\"login\">\n    <h2>Inventory Login</h2>\n    <p>Sign in to manage your store's inventory.</p>\n    <button className=\"github\" onClick={() => props.authenticate(\"Github\")}>\n      Log In With GitHub\n    </button>\n    <button className=\"twitter\" onClick={() => props.authenticate(\"Twitter\")}>\n      Log In With Twitter\n    </button>\n    <button className=\"facebook\" onClick={() => props.authenticate(\"Facebook\")}>\n      Log In With Facebook\n    </button>\n  </nav>\n);\n\nLogin.propTypes = {\n  authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;\n","import Rebase from 're-base';   // mirror state to firebase\nimport firebase from 'firebase';\n\n// create firebase app\nconst firebaseApp = firebase.initializeApp ({\n  apiKey: \"AIzaSyBGsbHqCHNgtHxYVo2U9Fwry_hrGhiOkH0\",\n  authDomain: \"oh-my-cod.firebaseapp.com\",\n  databaseURL: \"https://oh-my-cod.firebaseio.com\",\n  projectId: \"oh-my-cod\",\n  storageBucket: \"oh-my-cod.appspot.com\",\n  messagingSenderId: \"460355775724\",\n  appId: \"1:460355775724:web:1e74575dfb1594c5\"\n})\n\n// create rebase bindings\nconst base = Rebase.createClass(firebaseApp.database());   // returns database\n\n// name export\nexport { firebaseApp };\n\n// default export\nexport default base;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";    // import named and default\n\nclass Inventory extends React.Component {\n\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n    addFish: PropTypes.func\n  }\n\n  state = {\n    uid: null,\n    owner: null,\n  }\n\n  componentDidMount() {\n    // when page is loaded, Firebase will see if we're logged in & authenticated\n    // if yes, pass user to authHandler for checks. all client-side\n    // log-in automatically after refresh.\n    firebase.auth().onAuthStateChanged( user => {\n      if(user) {\n        this.authHandler({ user });\n      }\n    })\n  };\n\n  authHandler = async (authData) => {\n    // 1. look up durrent store in FB DB\n    console.log(\"authData\", authData);\n    // fetch current store. fetch returns a promise\n    // to put the store in the variable instead of the promise, add \"await\" to start\n    const store = await base.fetch(this.props.storeId, { context: this });\n\n    // 2 .claim store if there's no owner\n    if(!store.owner) {\n      // save it as our own: opposite of fetch, post/ push to firebase owner field\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid         // uid is user github auth token\n      })\n    }\n\n    // 3. set state of inventory component\n    this.setState({\n      uid: authData.user.uid,   //unique ID\n      owner: store.owner || authData.user.uid\n      // who is currently logged in user and who is owner of store?\n      // if same, proceed, if different, you ca't log in error msg.\n    })\n  }\n\n  authenticate = (provider) => {\n    console.log('provider', provider)\n    // need to make  provider for each login: GH, Twit &Fbook\n    // dynamically look up provider using ${ }. Parenthesis at end to call function.\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    // connect to Auth bit of firebase, sign in, then call AuthHAndler\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n      // provider is \"github\", \"faceook\" \"twitter\"\n  };\n\n  logout = async () => {\n    console.log(\"logging out\");\n    // async as waiting for firebase to log user out\n    await firebase.auth().signOut()\n    // then clear state\n    this.setState({ uid: null })\n  }\n\n  render() {\n    //logout button could be separate component\n    const logout = <button onClick={this.logout}>Log Out</button>;\n\n    // 1. if no logged-in user, show log-in screen\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate}/>\n    }\n\n    // 2. check if user is NOT the owner of the store\n    if(this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry, you are not the owner of this store.</p>\n          {logout}\n        </div>\n      )\n    }\n\n    // 3. If user is owner, render Inventory.\n    return (\n    <div className=\"inventory\">\n      <h2>Inventory</h2>\n      {logout}\n      {/* loop over fish state and render an edit fish form element for each fish */}\n      {Object.keys(this.props.fishes).map( key => (\n        // key of each fish\n        <EditFishForm\n          key={key}\n          index={key}\n          fish={this.props.fishes[key]}\n          updateFish={this.props.updateFish}\n          deleteFish={this.props.deleteFish}\n        />\n      ))}\n      <AddFishForm addFish={this.props.addFish}/>\n      <button onClick={this.props.loadSampleFishes}\n      >\n        Load Sample Fishes\n      </button>\n    </div>\n    )\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\n// format price call happens from helpers.\n\n\nclass Fish extends React.Component {\n\n  // static because all fish elemts will have the same ones, so proptypes lives on the fish instance.\n  static propTypes = {\n    details:PropTypes.shape({\n      image: PropTypes.string,\n      name: PropTypes.string,\n      price: PropTypes.number,\n      desc: PropTypes.string,\n      status: PropTypes.string\n    }),\n    addToOrder: PropTypes.func,\n  }\n\n  handleClick = () => {\n    this.props.addToOrder(this.props.index)\n    // pass in index as 'key' arg\n    // this function could be in-line in component render.\n  }\n\n  render() {\n    const { image, name, price, desc, status } = this.props.details\n    const isAvailable = status === 'available';      // boolean\n\n    return (\n    <li className=\"menu-fish\">\n      <img src={image} alt={name}/>\n      <h3 className=\"fish-name\">{name}\n        <span className=\"price\">{formatPrice(price)}</span>\n      </h3>\n      <p>{desc}</p>\n      <button\n        onClick={this.handleClick}\n        disabled={!isAvailable}>\n        {isAvailable ? 'Add to Order' : 'Sold Out'}\n      </button>\n    </li>\n    )\n  }\n}\n\nexport default Fish;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\n\nclass App extends React.Component {\n  state = {\n    fishes: {},\n    order: {}\n  };\n\n  static propTypes = {\n    match: PropTypes.object\n  }\n\n  componentDidMount () {\n    const { params } = this.props.match;\n    //first re-instate local storage\n    const localStorageRef = localStorage.getItem(params.storeId)\n    console.log(localStorageRef);\n    if(localStorageRef){\n      this.setState({ order: JSON.parse(localStorageRef) })\n    }\n\n    this.ref = base.syncState(`${params.storeId}/fishes`, {\n      // firebase ref: reference to a piece of data in database\n      context: this,\n      state: 'fishes'           // sync fish state\n    })\n    // sync state with props provided from Firebase, visible with react devtools in app/ props/match/storeID\n  }\n\n  componentDidUpdate() {\n    console.log(this.state.order);\n    // set key then value\n    localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order))\n    // stringify to change from it returning [object object]\n  }\n\n  // need to listen for unchanges to prevent memory leak\n  componentWillUnmount() {\n    base.removeBinding(this.ref)\n  }\n\n\n  addFish = fish => {\n    // 1.setState: take a copy of existing state.\n    const fishes = {...this.state.fishes}\n    // 2. add our new fish to fishes variable\n    // using timestamp for keys. fish on right side is passed-in fish object from createFish method in AddFishForm\n    fishes[`fish${Date.now()}`] = fish;\n    //Date.now() gives number of milliseconds since 1970...\n\n    //3. set the new fishes object to State.\n    // Takes copied fishes and new fishes and overwrites existing state.\n    this.setState({ fishes: fishes })\n  };\n\n  updateFish = (key, updatedFish) => {\n    // take copy of current state (whole fish state object)\n    const fishes = {...this.state.fishes}\n    // update that state\n    fishes[key] = updatedFish\n    // set the fishes object with new state\n    this.setState ({ fishes: fishes })\n  }\n\n  deleteFish = (key) => {\n    // 1. copy state\n    const fishes = {...this.state.fishes}\n    // 2. update state: must be set to NULL for FIREBASE to know to delete it\n    fishes[key] = null;       // \"delete\" (set to null) by key\n    // 3. setState\n    this.setState({ fishes: fishes })\n  }\n\n\n  loadSampleFishes = () => {\n    this.setState({ fishes: sampleFishes})\n  }\n\n  addToOrder = (key) => {\n    // 1. take copy, 2. add to update number in order, 3. update state object\n    const order = {...this.state.order};\n    order[key] = order[key] + 1 || 1;\n    //  if order.fish1 exists, add 1 to total, or if it doesnt, return 1 (add one of that fish.)\n    this.setState({ order: order})\n  }\n\n  deleteOrderItem = (key) => {\n    const order = {...this.state.order};\n    delete order[key]\n    // not mirroring to firebase so can use delete method instead of setting to null\n    this.setState({ order })        // shorthand for order: order\n  }\n\n\n  render() {\n    return (\n      <div className= \"catch-of-the-day\">\n        <div className= \"menu\">\n          <Header tagline=\"Fresh Seafood Market\" />\n          <ul className=\"fishes\">\n            {/* see vid 15 for explanation of keys & mapping */}\n            {Object.keys(this.state.fishes).map( key => (\n              <Fish\n                key={key}\n                index={key}\n                details={this.state.fishes[key]}\n                addToOrder={this.addToOrder}/>\n                // index ={key} neccessary for addToOrder function to access a key prop\n            ))}\n          </ul>\n        </div>\n        <Order\n          fishes={this.state.fishes}\n          order={this.state.order}\n          deleteOrderItem={this.deleteOrderItem}\n        />\n        <Inventory\n          addFish={this.addFish}\n          updateFish={this.updateFish}\n          loadSampleFishes={this.loadSampleFishes}\n          fishes={this.state.fishes}\n          deleteFish={this.deleteFish}\n          // match.params comes from react router: see in devtools:\n          // <App> / match / params / storeId\n          storeId={this.props.match.params.storeId}\n        />\n\n      </div>\n    )\n  }\n\n  // click on add to order in Fish; updates fishes and order state; both states are passed to order; order renders order details\n}\n\nexport default App;\n","import React from 'react';\n\nconst NotFound = () => (\n  <div>\n    <h2>Not Found Durrr</h2>\n  </div>\n);\n\nexport default NotFound;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      {/* go to this exact path / url */}\n      <Route exact path=\"/\" component={StorePicker}/>\n      {/* storeId catch all for any store url */}\n      <Route exact path=\"/store/:storeId\" component={App}/>\n      {/* NotFound routes to 404 basically */}\n      <Route component={NotFound}/>\n    </Switch>\n  </BrowserRouter>\n)\n\nexport default Router;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css'\n\n// render 'main' (index.html) to DOM\nrender (<Router />, document.querySelector('#main'))\n// router manages wether to go to App or StorePicker\n"],"sourceRoot":""}