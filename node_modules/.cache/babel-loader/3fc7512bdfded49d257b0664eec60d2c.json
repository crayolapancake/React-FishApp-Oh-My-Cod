{"ast":null,"code":"import _classCallCheck from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/src/components/Order.js\";\nimport React from 'react';\nimport { formatPrice } from '../helpers';\n\nvar Order =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  function Order() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Order)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderOrder = function (key) {\n      return React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      }, key);\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // tallu up total of order\n      var orderIds = Object.keys(this.props.order); // keys from order state\n\n      var total = orderIds.reduce(function (prevTotal, key) {\n        //\n        var fish = _this2.props.fishes[key]; // grab the fish you're looping over\n\n        var count = _this2.props.order[key]; // how many fish are being bought\n\n        var isAvailable = fish && fish.status === 'available'; // boolean, is there a fish and is fish available? ie, not \"sold out\"\n\n        if (isAvailable) {\n          console.log('count', count);\n          return prevTotal + count * fish.price;\n        }\n\n        return prevTotal;\n      }, 0);\n      return React.createElement(\"div\", {\n        className: \"order-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Order\", React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Order\"), React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, orderIds.map(function (key) {\n        return React.createElement(\"li\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, key);\n      })), React.createElement(\"div\", {\n        className: \"total\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"Total:\", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, formatPrice(total))));\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nexport default Order;","map":{"version":3,"sources":["/home/jemma/Desktop/ReactFishes/catch-of-the-day/src/components/Order.js"],"names":["React","formatPrice","Order","renderOrder","key","orderIds","Object","keys","props","order","total","reduce","prevTotal","fish","fishes","count","isAvailable","status","console","log","price","map","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,YAA5B;;IAEMC,K;;;;;;;;;;;;;;;;;;UAGJC,W,GAAc,UAACC,GAAD,EAAS;AACrB,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKA,GAAL,CAAP;AACD,K;;;;;;;6BAEQ;AAAA;;AACP;AACA,UAAMC,QAAQ,GAAGC,MAAM,CAACC,IAAP,CAAY,KAAKC,KAAL,CAAWC,KAAvB,CAAjB,CAFO,CAE2C;;AAClD,UAAMC,KAAK,GAAGL,QAAQ,CAACM,MAAT,CAAgB,UAACC,SAAD,EAAYR,GAAZ,EAAoB;AAAE;AAClD,YAAMS,IAAI,GAAG,MAAI,CAACL,KAAL,CAAWM,MAAX,CAAkBV,GAAlB,CAAb,CADgD,CACD;;AAC/C,YAAMW,KAAK,GAAG,MAAI,CAACP,KAAL,CAAWC,KAAX,CAAiBL,GAAjB,CAAd,CAFgD,CAEF;;AAC9C,YAAMY,WAAW,GAAGH,IAAI,IAAIA,IAAI,CAACI,MAAL,KAAgB,WAA5C,CAHgD,CAI/C;;AACD,YAAGD,WAAH,EAAgB;AACdE,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,KAArB;AACA,iBAAOH,SAAS,GAAIG,KAAK,GAAGF,IAAI,CAACO,KAAjC;AACD;;AACD,eAAOR,SAAP;AACD,OAVa,EAUX,CAVW,CAAd;AAYA,aACA;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKP,QAAQ,CAACgB,GAAT,CAAc,UAAAjB,GAAG;AAAA,eAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,GAAL,CAAJ;AAAA,OAAjB,CAAL,CAFF,EAGE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAASH,WAAW,CAACS,KAAD,CAApB,CADF,CAHF,CADA;AASD;;;;EA/BiBV,KAAK,CAACsB,S;;AAkC1B,eAAepB,KAAf","sourcesContent":["import React from 'react';\nimport { formatPrice } from '../helpers'\n\nclass Order extends React.Component {\n\n  // make separate render functions to keep it tidy\n  renderOrder = (key) => {\n    return <li>{key}</li>;\n  }\n\n  render() {\n    // tallu up total of order\n    const orderIds = Object.keys(this.props.order);   // keys from order state\n    const total = orderIds.reduce((prevTotal, key) => { //\n      const fish = this.props.fishes[key];           // grab the fish you're looping over\n      const count = this.props.order[key];          // how many fish are being bought\n      const isAvailable = fish && fish.status === 'available'\n       // boolean, is there a fish and is fish available? ie, not \"sold out\"\n      if(isAvailable) {\n        console.log('count', count);\n        return prevTotal + (count * fish.price)\n      }\n      return prevTotal;\n    }, 0);\n\n    return (\n    <div className=\"order-wrap\">Order\n      <h2>Order</h2>\n      <ul>{orderIds.map( key => <li>{key}</li> )}</ul>\n      <div className=\"total\">Total:\n        <strong>{formatPrice(total)}</strong>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default Order;\n"]},"metadata":{},"sourceType":"module"}