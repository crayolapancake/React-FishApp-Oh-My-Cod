{"ast":null,"code":"import _classCallCheck from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/src/components/Order.js\";\nimport React from 'react';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nvar Order =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Order, _React$Component);\n\n  function Order() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Order);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Order)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.renderOrder = function (key) {\n      var fish = _this.props.fishes[key]; // grab the fish you're looping over\n\n      var count = _this.props.order[key];\n      var isAvailable = fish && fish.status === 'available'; // delay in DB mirroring state: render nothing until fish actually exists.\n\n      if (!fish) return null;\n\n      if (!isAvailable) {\n        return React.createElement(CSSTransition, {\n          classNames: \"order\",\n          key: key,\n          timeout: {\n            enter: 250,\n            exit: 250\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, \"Sorry, \", fish ? fish.name : 'fish', \" is no longer available\"));\n      } else {\n        return React.createElement(CSSTransition, {\n          classNames: \"order\",\n          key: key,\n          timeout: {\n            enter: 250,\n            exit: 250\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, React.createElement(\"li\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, count, \" lbs \", fish.name, formatPrice(count * fish.price), React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this.props.deleteOrderItem(key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"\\xD7\")));\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Order, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      // tallu up total of order\n      var orderIds = Object.keys(this.props.order); // keys from order state\n\n      var total = orderIds.reduce(function (prevTotal, key) {\n        // reduce loops and tallies\n        var fish = _this2.props.fishes[key]; // grab the fish you're looping over\n\n        var count = _this2.props.order[key]; // how many fish are being bought\n\n        var isAvailable = fish && fish.status === 'available'; // boolean, is there a fish and is fish available? ie, not \"sold out\"\n\n        if (isAvailable) {\n          // console.log('count', count);\n          return prevTotal + count * fish.price;\n        } //else\n\n\n        return prevTotal;\n      }, 0); // 0 is starting value (second arg) for reduce()\n\n      return React.createElement(\"div\", {\n        className: \"order-wrap\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Order\"), React.createElement(TransitionGroup, {\n        component: \"ul\",\n        className: \"order\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, orderIds.map(this.renderOrder)), React.createElement(\"div\", {\n        className: \"total\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Total:\", React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, formatPrice(total))));\n    }\n  }]);\n\n  return Order;\n}(React.Component);\n\nexport default Order;","map":{"version":3,"sources":["/home/jemma/Desktop/ReactFishes/catch-of-the-day/src/components/Order.js"],"names":["React","formatPrice","TransitionGroup","CSSTransition","Order","renderOrder","key","fish","props","fishes","count","order","isAvailable","status","enter","exit","name","price","deleteOrderItem","orderIds","Object","keys","total","reduce","prevTotal","map","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { formatPrice } from '../helpers'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\nclass Order extends React.Component {\n\n  // make separate render functions to keep it tidy\n  renderOrder = (key) => {\n    const fish = this.props.fishes[key];           // grab the fish you're looping over\n    const count = this.props.order[key];\n    const isAvailable = fish && fish.status === 'available'\n\n    // delay in DB mirroring state: render nothing until fish actually exists.\n    if(!fish) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition\n          classNames=\"order\"\n          key={key}\n          timeout={{ enter: 250, exit: 250 }}\n        >\n          <li\n            key={key}>\n            Sorry, {fish ? fish.name : 'fish'} is no longer available\n          </li>\n        </CSSTransition>\n      )\n    } else {\n      return (\n        <CSSTransition\n          classNames=\"order\"\n          key={key}\n          timeout={{ enter: 250, exit: 250 }}\n        >\n          <li key={key}>\n            {count} lbs {fish.name}\n            {formatPrice(count * fish.price)}\n            <button onClick={() => this.props.deleteOrderItem(key)}>&times;</button>\n          </li>\n        </CSSTransition>\n      )\n    }\n  }\n\n  render() {\n    // tallu up total of order\n    const orderIds = Object.keys(this.props.order);   // keys from order state\n\n    const total = orderIds.reduce((prevTotal, key) => { // reduce loops and tallies\n      const fish = this.props.fishes[key];           // grab the fish you're looping over\n      const count = this.props.order[key];          // how many fish are being bought\n      const isAvailable = fish && fish.status === 'available'\n       // boolean, is there a fish and is fish available? ie, not \"sold out\"\n      if(isAvailable) {\n        // console.log('count', count);\n        return prevTotal + (count * fish.price)\n      }\n      //else\n      return prevTotal;\n    }, 0);                       // 0 is starting value (second arg) for reduce()\n\n    return (\n    <div className=\"order-wrap\">\n      <h2>Order</h2>\n      {/* loop over each of the orderIDs to display each fish & how many */}\n      <TransitionGroup\n        component=\"ul\"\n        className=\"order\">\n        {orderIds.map(this.renderOrder)}\n      </TransitionGroup>\n      <div className=\"total\">Total:\n        <strong>{formatPrice(total)}</strong>\n      </div>\n    </div>\n    )\n  }\n}\n\nexport default Order;\n"]},"metadata":{},"sourceType":"module"}