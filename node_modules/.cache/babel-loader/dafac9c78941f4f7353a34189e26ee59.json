{"ast":null,"code":"import _regeneratorRuntime from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jemma/Desktop/ReactFishes/catch-of-the-day/src/components/Inventory.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\"; // import named and default\n\nvar Inventory =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Inventory, _React$Component);\n\n  function Inventory() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Inventory);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Inventory)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      uid: null,\n      owner: null\n    };\n\n    _this.authHandler =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(authData) {\n        var store;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 1. look up durrent store in FB DB\n                console.log(\"authData\", authData); // fetch current store. fetch returns a promise\n                // to put the store in the variable instead of the promise, add \"await\" to start\n\n                _context.next = 3;\n                return base.fetch(_this.props.storeId, {\n                  context: _assertThisInitialized(_assertThisInitialized(_this))\n                });\n\n              case 3:\n                store = _context.sent;\n\n                if (store.owner) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _context.next = 7;\n                return base.post(\"\".concat(_this.props.storeId, \"/owner\"), {\n                  data: authData.user.uid // uid is user github auth token\n\n                });\n\n              case 7:\n                // 3. set state of inventory component\n                _this.setState({\n                  uid: authData.user.uid,\n                  //unique ID\n                  owner: store.owner || authData.user.uid // who is currently logged in user and who is owner of store?\n                  // if same, proceed, if different, you ca't log in error msg.\n\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.authenticate = function (provider) {\n      console.log('provider', provider); // need to make  provider for each login: GH, Twit &Fbook\n      // dynamically look up provider using ${ }. Parenthesis at end to call function.\n\n      var authProvider = new firebase.auth[\"\".concat(provider, \"AuthProvider\")](); // connect to Auth bit of firebase, sign in, then call AuthHAndler\n\n      firebaseApp.auth().signInWithPopup(authProvider).then(_this.authHandler); // provider is \"github\", \"faceook\" \"twitter\"\n    };\n\n    _this.logout =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(\"logging out\"); // async as waiting for firebase to log user out\n\n              _context2.next = 3;\n              return firebase.auth().signOut();\n\n            case 3:\n              // then clear state\n              _this.setState({\n                uid: null\n              });\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n    return _this;\n  }\n\n  _createClass(Inventory, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      // when page is loaded, Firebase will see if we're logged in & authenticated\n      // if yes, pass user to authHandler for checks. all client-side\n      //should log-in automayically after refresh.\n      firebase.auth().onAuthStateChanged(function (user) {\n        if (user) {\n          _this2.authHandler({\n            user: user\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      //logout button could be separate component\n      var logout = React.createElement(\"button\", {\n        onClick: this.logout,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Log Out\"); // 1. if no logged-in user, show log-in screen\n\n      if (!this.state.uid) {\n        return React.createElement(Login, {\n          authenticate: this.authenticate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        });\n      } // 2. check if user is NOT the owner of the store\n\n\n      if (this.state.uid !== this.state.owner) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, \"Sorry, you are not the owner of this store.\"), logout);\n      } // 3. If user is owner, render Inventory.\n\n\n      return React.createElement(\"div\", {\n        className: \"inventory\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Inventory\"), logout, Object.keys(this.props.fishes).map(function (key) {\n        return (// key of each fish\n          React.createElement(EditFishForm, {\n            key: key,\n            index: key,\n            fish: _this3.props.fishes[key],\n            updateFish: _this3.props.updateFish,\n            deleteFish: _this3.props.deleteFish,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 107\n            },\n            __self: this\n          })\n        );\n      }), React.createElement(AddFishForm, {\n        addFish: this.props.addFish,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.props.loadSampleFishes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Load Sample Fishes\"));\n    }\n  }]);\n\n  return Inventory;\n}(React.Component);\n\nInventory.propTypes = {\n  fishes: PropTypes.object,\n  updateFish: PropTypes.func,\n  deleteFish: PropTypes.func,\n  loadSampleFishes: PropTypes.func,\n  addFish: PropTypes.func\n};\nexport default Inventory;","map":{"version":3,"sources":["/home/jemma/Desktop/ReactFishes/catch-of-the-day/src/components/Inventory.js"],"names":["React","PropTypes","firebase","AddFishForm","EditFishForm","Login","base","firebaseApp","Inventory","state","uid","owner","authHandler","authData","console","log","fetch","props","storeId","context","store","post","data","user","setState","authenticate","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","Object","keys","fishes","map","key","updateFish","deleteFish","addFish","loadSampleFishes","Component","propTypes","object","func"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport firebase from \"firebase\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport base, { firebaseApp } from \"../base\";    // import named and default\n\nclass Inventory extends React.Component {\n\n  static propTypes = {\n    fishes: PropTypes.object,\n    updateFish: PropTypes.func,\n    deleteFish: PropTypes.func,\n    loadSampleFishes: PropTypes.func,\n    addFish: PropTypes.func\n  }\n\n  state = {\n    uid: null,\n    owner: null,\n  }\n\n  componentDidMount() {\n    // when page is loaded, Firebase will see if we're logged in & authenticated\n    // if yes, pass user to authHandler for checks. all client-side\n    //should log-in automayically after refresh.\n    firebase.auth().onAuthStateChanged( user => {\n      if(user) {\n        this.authHandler({ user });\n      }\n    })\n  };\n\n  authHandler = async (authData) => {\n    // 1. look up durrent store in FB DB\n    console.log(\"authData\", authData);\n    // fetch current store. fetch returns a promise\n    // to put the store in the variable instead of the promise, add \"await\" to start\n    const store = await base.fetch(this.props.storeId, { context: this });\n\n    // 2 .claim store if there's no owner\n    if(!store.owner) {\n      // save it as our own: opposite of fetch, post/ push to firebase owner field\n      await base.post(`${this.props.storeId}/owner`, {\n        data: authData.user.uid         // uid is user github auth token\n      })\n    }\n\n    // 3. set state of inventory component\n    this.setState({\n      uid: authData.user.uid,   //unique ID\n      owner: store.owner || authData.user.uid\n      // who is currently logged in user and who is owner of store?\n      // if same, proceed, if different, you ca't log in error msg.\n    })\n  }\n\n  authenticate = (provider) => {\n    console.log('provider', provider)\n    // need to make  provider for each login: GH, Twit &Fbook\n    // dynamically look up provider using ${ }. Parenthesis at end to call function.\n    const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n    // connect to Auth bit of firebase, sign in, then call AuthHAndler\n    firebaseApp\n      .auth()\n      .signInWithPopup(authProvider)\n      .then(this.authHandler);\n      // provider is \"github\", \"faceook\" \"twitter\"\n  };\n\n  logout = async () => {\n    console.log(\"logging out\");\n    // async as waiting for firebase to log user out\n    await firebase.auth().signOut()\n    // then clear state\n    this.setState({ uid: null })\n  }\n\n  render() {\n    //logout button could be separate component\n    const logout = <button onClick={this.logout}>Log Out</button>;\n\n    // 1. if no logged-in user, show log-in screen\n    if (!this.state.uid) {\n      return <Login authenticate={this.authenticate}/>\n    }\n\n    // 2. check if user is NOT the owner of the store\n    if(this.state.uid !== this.state.owner) {\n      return (\n        <div>\n          <p>Sorry, you are not the owner of this store.</p>\n          {logout}\n        </div>\n      )\n    }\n\n    // 3. If user is owner, render Inventory.\n    return (\n    <div className=\"inventory\">\n      <h2>Inventory</h2>\n      {logout}\n      {/* loop over fish state and render an edit fish form element for each fish */}\n      {Object.keys(this.props.fishes).map( key => (\n        // key of each fish\n        <EditFishForm\n          key={key}\n          index={key}\n          fish={this.props.fishes[key]}\n          updateFish={this.props.updateFish}\n          deleteFish={this.props.deleteFish}\n        />\n      ))}\n      <AddFishForm addFish={this.props.addFish}/>\n      <button onClick={this.props.loadSampleFishes}\n      >\n        Load Sample Fishes\n      </button>\n    </div>\n    )\n  }\n}\n\nexport default Inventory;\n"]},"metadata":{},"sourceType":"module"}